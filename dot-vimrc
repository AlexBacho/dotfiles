
autocmd!

" ==============================
" global, misc
" ==============================
autocmd! bufwritepost .vimrc source %
" terminal visual blank
set vb t_vb=


" ==============================
" pathogen
" ==============================

" ==============================
" mouse
" ==============================
set mouse=a
nmap <C-a> :call ToggleMouse()<CR>


" ==============================
" keyboard
" ==============================
" backspace
set bs=2
" set backspace=eol,start,indent

let mapleader = ","

" copy from cursor to eol
nnoremap Y y$

" tabs
set expandtab
set shiftwidth=4
set softtabstop=4
set tabstop=4

nmap <S-Tab>   :bp!<CR>
nmap <Tab>     :bn!<CR>
nmap <F3>      :bp!<CR>
nmap <F4>      :bn!<CR>
nmap <A-Left>  :bp!<CR>
nmap <A-Right> :bn!<CR>

" move lines up & down
nnoremap <C-j> :m .+1<CR>==
nnoremap <C-k> :m .-2<CR>==
vnoremap <C-j> :m '>+1<CR>gv=gv
vnoremap <C-k> :m '<-2<CR>gv=gvi
inoremap <C-j> <Esc>:m .+1<CR>==gi
inoremap <C-k> <Esc>:m .-2<CR>==g

" execute python script
nmap <silent> <C-x> <Esc>:w<CR>:!ipython %<CR>

" ==============================
" copy & paste
" ==============================
set pastetoggle=<F9>
set clipboard=unnamed


" ==============================
" search & replace
" ==============================
set gdefault
set hlsearch
set ignorecase
set incsearch
set smartcase

" undo highlighted matches
map <silent> H :noh<CR>
noremap <silent> H :set hlsearch! hlsearch?<CR>

" ==============================
" sort
" ==============================
vnoremap <Leader>s :sort<CR>
vnoremap < <gv
vnoremap > >gv


" ==============================
" syntax
" ==============================
syntax on
filetype off
filetype plugin indent on

set number
set nowrap
set nocompatible


" ==============================
" python IDE
" ==============================

" power-line
" git clone git://github.com/Lokaltog/vim-powerline.git
set laststatus=2
"let g:Powerline_symbols = "fancy"

" ctrlp
" git clone git://github.com/kien/ctrlp.vim.git
let g:ctrlp_max_height=30
set wildignore+=*.pyc
set wildignore+=*_build/*
set wildignore+=*.egg
set wildignore+=*egg-info/*
set wildignore+=*build/lib.linux*

" python-mode
" git clone https://github.com/klen/python-mode
let g:pymode_rope_goto_definition_bind = "<Leader>g"
let ropevim_enable_shortcuts = 1
let g:pymode_rope = 1
let g:pymode_rope_goto_def_newwin = "new"
let g:pymode_rope_extended_complete = 1
let g:pymode_breakpoint = 0
let g:pymode_syntax = 1
let g:pymode_syntax_builtin_objs = 0
let g:pymode_syntax_builtin_funcs = 0
let g:pymode_lint_ignore = "E501, W404"

" jedi-vim
" git clone git://github.com/davidhalter/jedi-vim.git
let g:jedi#usages_command = "<Leader>z"
let g:jedi#popup_on_dot = 0
let g:jedi#popup_select_first = 0


set completeopt=longest,menuone

" syntastic - slightly redundant...(python-mode)
" git clone https://github.com/scrooloose/syntastic.git
let g:syntastic_check_on_open=1
let g:syntastic_python_checker="flake8"
" Ignore E501-line length, E128-dict keys on new line, W391-newline at end of file, W404-from __init__ import *
let g:syntastic_python_checker_args='--ignore=E501,W391,W404,E711'

" indent guider
" git clone git://github.com/nathanaelkane/vim-indent-guides.git
" let g:indent_guides_auto_colors = 0
" let g:indent_guides_start_level = 2
" let g:indent_guides_guide_size = 1


" ==============================
" colors
" ==============================
set t_Co=256
" guicolorscheme
" git clone https://github.com/vim-scripts/guicolorscheme.vim.git
"runtime! plugin/guicolorscheme.vim
"GuiColorScheme gloob

" CSApprox - better guicolorscheme
" git clone https://github.com/vim-scripts/CSApprox.git 
let g:CSApprox_attr_map = { 'bold' : 'bold', 'italic' : '', 'sp' : '' }
colorscheme gloob-csa


" ==============================
" functions
" ==============================
function! ToggleMouse()
" check if mouse is enabled
if &mouse == 'a'
    " disable mouse
    set mouse=
else
    " enable mouse everywhere
    set mouse=a
endif
endfunc

function! OmniPopup(action)
if pumvisible()
    if a:action == 'j'
        return "\<C-N>"
    elseif a:action == 'k'
        return "\<C-P>"
    endif
endif
return a:action
endfunction


" ==================================================
" ,>   )\ `a_                       _a' /(
" (  _  )/ /{_ ~~HERE BE DRAGONS~~ _}\ \(  -
"  `(,)_,)/      & some old crap       \(,_(,\\
"    ,<_ ,<_.                          ._>, _>,``==>
" ==================================================


" * User Interface
" *****************************************
"
"set confirm
"
"set history=256
"set viminfo=/10,'10,r/mnt/dvdrom,r/mnt/dvdrw,h,\"100
"set wildmenu
"set shortmess+=r
"
"set ruler
"set showmode
"set showcmd
"set showfulltag
"set display+=lastline
"
"
"set nrformats=alpha,hex
"set showmatch
"
"set noautowrite
"
"" folding
"set foldmethod=marker
"set foldmarker={{{,}}}
"
"cmap %/ <C-R>=expand("%:p:h")."/" <CR>
"
"set linebreak
"
"autocmd Filetype javascript setlocal ts=4 sw=4 sts=0 noexpandtab
"
"set shiftround
"set smarttab
"set autoindent
"
"set formatoptions=cqlr
"set textwidth=79
"
"set scrolloff=3
"set sidescrolloff=10
"set previewheight=5
"
"set fencs=utf8,latin2
"
"" * Key remapping
"" *****************************************
"" Doplnovani Ctrl-Space
imap <C-Space> <C-p>
"
"" Smart-home
"imap <Home> <Esc>^i
"nmap <Home> ^
"
"" * Used functions
"" *****************************************
"" Sessions
"set sessionoptions=blank,buffers,curdir,folds,help,resize,tabpages,winsize
"nmap <C-q> :mksession! ~/.vim/.session <CR>
"nmap <C-s> :source ~/.vim/.session <CR>
"
""autocmd BufRead,BufNewFile * syntax match Error "\s\+$"
"" autocmd BufRead,BufNewFile *.cc,*.h,*.sql,*.py,*.cpp,*.sh,*.conf,*.help syntax match Error "\(^.\{80\}.*\)\@<=."
"autocmd BufRead,BufNewFile *.storage.help,*.xmlrpc.help,*.fastrpc.help set filetype=xmlrpchelp
"autocmd BufRead,BufNewFile .py set filetype=xmlrpchelp
"" Remove trailing whitespace
"" autocmd FileType c,cpp,java,php,js,python,twig,xml,yml autocmd BufWritePre <buffer> :call setline(1,map(getline(1,"$"),'substitute(v:val,"\\s\\+$","","")'))
"
"" Handlebars sablony
"autocmd BufNewFile,BufRead *.hbs set filetype=html
"autocmd BufNewFile,BufRead *.handlebars set filetype=html
"
""noremap <silent> <F11> :call VimCommanderToggle()<CR>
"
"set tm=10
"
"
"" * Text Formatting -- General
"" *****************************************
"
"" Prepinani mezi chybami
nmap <F7> :lprev<CR>
nmap <F8> :lnext<CR>


set clipboard=unnamed
set mouse=v
vmap <C-c> "+y
